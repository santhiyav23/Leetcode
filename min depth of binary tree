class Solution:
    def minDepth(self, root: Optional[TreeNode]) -> int:

        if not root:
            return 0

        queue = []
        depth = 1
        queue.append((root, depth))

        while queue:

            curr , d = queue.pop(0)

            if curr.left is None and curr.right is None:
                return d

            if curr.left:
                queue.append((curr.left, d+1))

            if curr.right:
                queue.append((curr.right, d+1))

        return depth 

        
